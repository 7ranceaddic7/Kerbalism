//Swapping Hypergolic fuel containers,engines and RCS to MonoPropellant for better compatibility with the rest of the game.
//If you have other mods (such as Real Fuels) that use/add Aerozine50/NTO, you can delete this cfg file if you wish.
//DEDICATED FUEL TANKS KEEP THE OPTION TO STORE HYPERGOLIC, THOUGH NO PARTS CAN USE IT.
//this is a stand-alone patch.

//Switches RCS on all SSTU parts from Hypergolic to monoProp. ISP/Thrust unchanged.
@PART[SSTU-*]:HAS[@MODULE[ModuleRCSFX]]:FOR[SSTU]:NEEDS[SSTU]
{
	!MODULE[SSTUFuelSelection] {}			//removes fuel selection option, as all RCS is now using MonoProp
	
	@MODULE[ModuleRCSFX]:HAS[@PROPELLANT[Aerozine50],@PROPELLANT[NTO]],*
		{
			@PROPELLANT[Aerozine50]
				{
					@name = MonoPropellant
					!ratio
				}
			!PROPELLANT[NTO] {}
		}
}

//Switches all Aerozine/NTO Engines to MonoProp. ISP/Thrust unchanged.
@PART[SSTU-*]:HAS[@MODULE[ModuleEnginesFX]]:FOR[SSTU]:NEEDS[SSTU]
{
	@MODULE[ModuleEnginesFX]:HAS[@PROPELLANT[Aerozine50],@PROPELLANT[NTO]],*
		{
			@PROPELLANT[Aerozine50]
				{
					@name = MonoPropellant
					!ratio
				}
			!PROPELLANT[NTO] {}
		}
}

//Switches Containers/Tanks that have Aerozine/NTO through stock RESOURCE {} definitions to MonoProp 
//scaled by volume. Took a part with and without patch to see how SSTUVolumeContainer scales, 
//compared A50/NTO amounts and MP amounts after patch. result->divide by 2.5

//switches containers that have been changed by Kerbalism Patches
@PART[SSTU-*]:HAS[@RESOURCE[Aerozine50],@RESOURCE[NTO]]:FOR[SSTU]:NEEDS[SSTU]
{
	@RESOURCE[Aerozine50]
		{
			@name = MonoPropellant
			@amount /= 2.5
			@maxAmount /= 2.5
		}
	
	!RESOURCE[NTO] {}
}

//Switches containers that were never touched OR if you use this as a stand-alone patch
//Thanks shadowmage for keeping your container names MOSTLY consistent across all parts, makes my life a lot easier
//RCSPropellant=for parts which have a small portion of the tank dedicated to RCS fuel, such as Service Modules
//Aux= same as above, just using a different name (namely the pesky SRB-U)
//Propellant = for parts that have integrated engines
//remove the hypergolic resources from other parts, though the UI can still force hypergolic into tanks. Little to no use at this point for SSTU alone.
//If i'm interpreting it correctly (according to wiki), MP is more dense than a50+NTO, therefore for the same volume, you SHOULD have more fuel available.
//SSTUVolumeContainer disagrees apparently, and nerfs the DV of most parts anywhere between 10% and 40%
@PART[SSTU-*]:HAS[@MODULE[SSTUVolumeContainer]]:FOR[SSTU]:NEEDS[SSTU]
{
	@MODULE[SSTUVolumeContainer]:HAS[@CONTAINER[Propellant]]
		{
			@CONTAINER[Propellant]
				{
					@defaultResources = MonoPropellant,100,1
					!resource[NTO] {}
					!resource[Aerozine50] {}
					%resource = MonoPropellant
				}
		}

	@MODULE[SSTUVolumeContainer]:HAS[@CONTAINER[RCSPropellant]]
		{
			@CONTAINER[RCSPropellant]
				{
					@defaultResources = MonoPropellant,100,1
					!resource[NTO] {}
					!resource[Aerozine50] {}
					%resource = MonoPropellant
				}
		}

	@MODULE[SSTUVolumeContainer]:HAS[@CONTAINER[Aux]]
		{
			@CONTAINER[Aux]
				{
					@defaultResources = MonoPropellant,100,1
					!resource[NTO] {}
					!resource[Aerozine50] {}
					%resource = MonoPropellant
				}
		}
		
	@MODULE[SSTUVolumeContainer]:HAS[@CONTAINER[*Tank*]],*
		{
			@CONTAINER[*Tank*]
				{
					!resource[NTO] {}
					!resource[Aerozine50] {}
				}
		}		
		
}

//Changes parts with fuel cells that run on Aero/NTO to MP
@PART[SSTU*]:HAS[@MODULE[ModuleResourceConverter]]:FOR[SSTU]:NEEDS[SSTU]
{
	!MODULE[ModuleResourceConverter] {}
	MODULE
		{
			name = ModuleResourceConverter
			ConverterName = Fuel Cell
			StartActionName = Start Fuel Cell
			StopActionName = Stop Fuel Cell
			FillAmount = 0.95
			AutoShutdown = false
			GeneratesHeat = false
			UseSpecialistBonus = false

			INPUT_RESOURCE
				{
					ResourceName = MonoPropellant
					Ratio = 0.001875
					FlowMode = STAGE_PRIORITY_FLOW
				}
			OUTPUT_RESOURCE
				{
					ResourceName = ElectricCharge
					Ratio = 1.5
					DumpExcess = false
				}
		}
}