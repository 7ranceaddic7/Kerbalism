// ============================================================================
// Remove stock science data containers, add hard-drives instead
// ============================================================================

@PART[*]:HAS[@MODULE[ModuleScienceContainer]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  !MODULE[ModuleScienceContainer] {}
}

@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  MODULE
  {
    name = HardDrive
    title = Pod Storage
    dataCapacity = 0.5      // data size in Mb
    sampleCapacity = 4      // sample size in slots
  }
}

@PART[kerbalEVA*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  MODULE
  {
    name = HardDrive
    title = EVA Storage
    dataCapacity = 0.25
    sampleCapacity = 2
  }
}

@PART[ScienceBox]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  MODULE
  {
    name = HardDrive
    title = Science Box
    dataCapacity = 24
    sampleCapacity = 14
  }
}


// ============================================================================
// Antenna values that actually make sense...
// The idea is to be very restrictive here and increase data rates with
// tech upgrades.
// ============================================================================

// Catch-all patch
@PART[*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    // Setup all antennas based on their rating. This works for all antennas
    // rated >1Gm which should be all, except for the Communotron 8/16/16-S
    // which we'll handle below.
    // While this won't produce nice numbers, it will nerf all antennas,
    // because usually they'd be MASSIVELY OP for our science system.

    %packetSize = #$antennaPower$         // our bandwidth is based on power
    @packetSize /= 1000000                // convert to Gm
    @packetSize != 0.5                    // square root of Gm, that's our Kb/s
    %packetResourceCost = #$packetSize$   // base EC/min off packet size
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// Communotron 8
@PART[kerbalism-antenna]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 1.8             // <- Kb/s
    %packetResourceCost = 0.7     // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// Communotron 16, Communotron 16-S
@PART[longAntenna,SurfAntenna]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 2.5             // <- Kb/s
    %packetResourceCost = 1.2     // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// HG-5
@PART[HighGainAntenna5]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 4               // <- Kb/s
    %packetResourceCost = 3       // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// Communotron DTS-M1
@PART[mediumDishAntenna]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 8               // <- Kb/s
    %packetResourceCost = 3.4     // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// RA-2
@PART[RelayAntenna5]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 4.5             // <- Kb/s
    %packetResourceCost = 4       // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// Communotron HG-55
@PART[HighGainAntenna]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 15              // <- Kb/s
    %packetResourceCost = 12      // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// RA-15
@PART[RelayAntenna50]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 7.5             // <- Kb/s
    %packetResourceCost = 16      // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// Communotron 88-88
@PART[commDish]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 24              // <- Kb/s
    %packetResourceCost = 24      // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}

// RA-100
@PART[RelayAntenna100]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
  @MODULE[ModuleDataTransmitter]
  {
    %packetSize = 12              // <- Kb/s
    %packetResourceCost = 30      // <- EC/min
    @packetSize /= 1024
    @packetResourceCost /= 60
    %packetInterval = 1
  }
}


// ============================================================================
// Replace stock lab with our own
// ============================================================================

@PART[*]:HAS[@MODULE[ModuleScienceLab]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  !MODULE[ModuleScienceLab] {}
  !MODULE[ModuleScienceConverter] {}

  MODULE
  {
    name = Laboratory
    researcher = Scientist
    analysis_rate = 0.005 // 5 kbps
    ec_rate = 1.0
  }

  MODULE
  {
    name = HardDrive
    dataCapacity = 20000
    sampleCapacity = 20000
  }
}

// ============================================================================
// Catch-all setup for all experiments and experiment definitions that aren't
// tweaked later in one of the support configs, either because we forgot or
// didn't know about them.
//
// This will set ALL experiments to a state that is stock like: very little
// data with almost instant data sampling.
//
// Mods should tweak their experiments in the respective mod configs.
// ============================================================================

@PART[*]:HAS[@MODULE[ModuleScienceExperiment]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  MODULE
  {
    name = Experiment
    experiment_id = #$../MODULE[ModuleScienceExperiment]/experimentID$
    ec_rate = 0          // emulate stock: no ec needed, instant transmission
    data_rate = 999
  }

  !MODULE[ModuleScienceExperiment] {}
}

@EXPERIMENT_DEFINITION:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	%dataScale = 0.009   // ~9 kB
	@dataScale /= #$baseValue$
}

// ============================================================================
// Tweak situation/biome masks some experiments
// ============================================================================

@EXPERIMENT_DEFINITION:HAS[#id[evaReport]]:NEEDS[FeatureScience]:FOR[Kerbalism]           { @situationMask = 51    }
@EXPERIMENT_DEFINITION:HAS[#id[evaReport]]:NEEDS[FeatureScience]:FOR[Kerbalism]           { @biomeMask = 3         }
@EXPERIMENT_DEFINITION:HAS[#id[gravityScan]]:NEEDS[FeatureScience]:FOR[Kerbalism]         { @situationMask = 48    }
@EXPERIMENT_DEFINITION:HAS[#id[gravityScan]]:NEEDS[FeatureScience]:FOR[Kerbalism]         { @biomeMask = 48        }
@EXPERIMENT_DEFINITION:HAS[#id[barometerScan]]:NEEDS[FeatureScience]:FOR[Kerbalism]       { @title = Pressure Scan }
@EXPERIMENT_DEFINITION:HAS[#id[temperatureScan]]:NEEDS[FeatureScience]:FOR[Kerbalism]     { @biomeMask = 3         }
@EXPERIMENT_DEFINITION:HAS[#id[atmosphereAnalysis]]:NEEDS[FeatureScience]:FOR[Kerbalism]  { @biomeMask = 0         }
@EXPERIMENT_DEFINITION:HAS[#id[asteroidSample]]:NEEDS[FeatureScience]:FOR[Kerbalism]      { @biomeMask = 0         }
@EXPERIMENT_DEFINITION:HAS[#id[asteroidSample]]:NEEDS[FeatureScience]:FOR[Kerbalism]      { @title = Asteroid Scan }


// ============================================================================
// Remove scientist bonus
// ============================================================================

@EXPERIENCE_TRAIT[Scientist]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  @desc = Scientists can reset experiments.
  @EFFECT[VesselScienceReturn] { @modifiers = 1, 1, 1, 1, 1 }
  @EFFECT[PartScienceReturn]   { @modifiers = 1, 1, 1, 1, 1 }
}


// ============================================================================
// Lab module satisfy stock contracts
// ============================================================================

@Contracts:NEEDS[FeatureScience]:FOR[Kerbalism]
{
  @Base
  {
    @PART_REQUEST:HAS[#Module[ModuleScienceLab]] { @Module = Laboratory }
  }
  @Station
  {
    @PART_REQUEST:HAS[#Module[ModuleScienceLab]] { @Module = Laboratory }
  }
}
