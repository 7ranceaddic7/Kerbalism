// ============================================================================
// Temporary tweaking values
// ============================================================================
// Tweaking hints
//
// data - baseline size in Mb (keep in mind it gets 4 big upgrades, don't go overboard)
// samples - sample slots. this one is counter-intuitive, as most experiments
// occupy multiple slots per run. Slot size is tied to data scales in kerbalism's 
// back-end, and samples have large data values for lab analysis purposes.
// ============================================================================
// Change values here, they'll get copied and patched later in this file.
// Anything that modifies tech tree positions 
// (such as unmanned tech trees, or Probes Before Crew for example)
// will need a patch to balance these values, otherwise they make no sense. 
// Patching mods that add a ton of command modules is a nightmare.
// General balancing idea: based on unlock tiers. Probes get on average
// 1.5 - 2 times more data storage due to lack of sample storage.
// ============================================================================
// HDD Upgrades at : T1, T4, T6, T8 	- 		2-8-64-512		(times the base value)
// Sample Upgrades at: T3, T6			-		2-7				(times the base value)
KERBALISM_HDD_SIZES
{
	MK1Pod											//start
	{
		data = 0.47
		samples = 1
	}
	
	KV1Onion										//start
	{
		data = 0.73
		samples = 1
	}

	KV2Pea											//T3
	{
		data = 31.18
		samples = 2
	}
	
	Stayputnik										//T3
	{
		data = 56.55
		samples = 0
	}

	MK1Cockpit										//T3
	{
		data = 39.93
		samples = 1
	}

	KV3Pomegranate									//T4
	{
		data = 61.37
		samples = 2
	}	
	
	MK1InlineCockpit								//T4
	{
		data = 84.16
		samples = 1
	}

	MK1LanderCan									//T4
	{
		data = 17.42
		samples = 5
	}
	
	MK2Pod											//T4
	{
		data = 77.29
		samples = 3
	}

	OKTO											//T4
	{
		data = 	184.16									
		samples = 0
	}
	
	MK1-3Pod										//T5
	{
		data = 132.03
		samples = 1
	}

	MK2Cockpit										//T5
	{
		data = 144.61
		samples = 1
	}
	
	MK2LanderCan									//T5
	{
		data = 48.92
		samples = 7
	}
	
	MEM												//T5
	{
		data = 102.18
		samples = 12
	}

	PPD12Cupola										//T5
	{
		data = 39.82
		samples = 0
	}

	HECS											//T5
	{
		data = 239.63
		samples = 0
	}
	
	MK2InlineCockpit								//T6
	{
		data = 319.74
		samples = 2
	}
	
	MK3Cockpit										//T6
	{
		data = 528.39
		samples = 15
	}

	OKTO2											//T6
	{
		data = 342.13								//much smaller than the Base Okto, but more advanced tech.
		samples = 0
	}	

	QBE												//T6
	{
		data = 671.49
		samples = 0
	}	
	
	RoveMate										//T6
	{
		data = 425.61
		samples = 3									//only probe that can store samples?
	}
	
	MK2DroneCore									//T7
	{
		data = 714.33
		samples = 0
	}
	
	HECS2											//T7
	{
		data = 1048.82
		samples = 0
	}	

	RC-001S											//T7
	{
		data = 993.16
		samples = 0
	}

	RC-L01											//T8
	{
		data = 2594.88								//best probe in the game. it better store a crapton of data.
		samples = 0
	}

	ScienceLabs										//snowflake
	{
		data = 10000
		samples = 25
	}

	EVAKerbals										//snowflake
	{
		data = 0.25
		samples = 1
	}

	ScienceBox										//snowflake
	{
		data = 0
		samples = 8
	}

	PRIVATE_DRIVES									//this is internal storage for samples. 
	{												//It can only store samples for the experiment it's attached to
		MysteryGoo
		{
			data = 0
			samples = 1
		}
		
		MaterialsBay
		{
			data = 0
			samples = 4								//this has to be equal to the sample size. 	
		}											//as currently balanced, for matbay, the size of a single experiment is 4
		
		SpectroVariometer
		{
			data = 0
			samples = 7								// atmo sample has a size of 7 slots currently.
		}
		
		Drills										//surface samples only; no probe asteroid sampling.
		{
			data = 0
			samples = 1								
		}
	}
}
// ============================================================================
// Remove stock science data containers, add hard-drives/sample containers instead
// Setting default drive sizes for all parts, even modded ones
// modded parts will need separate tweaks in their own configs
// ============================================================================
@PART[*]:HAS[@MODULE[ModuleScienceContainer]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	!MODULE[ModuleScienceContainer] {}
}

@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		title = Command Module Storage
		dataCapacity = 0.5      // data size in Mb
		sampleCapacity = 1      // sample size in slots
	}
}
// ============================================================================
// Adding HardDrive module for snowflakes so they can get patched.
// ============================================================================
@PART[*]:HAS[@MODULE[Laboratory]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	MODULE
	{
		name = HardDrive
	}
}

@PART[ScienceBox,kerbalEVA*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	MODULE
	{
		name = HardDrive
	}
}
// ============================================================================
// Remove the ability for probe cores to store samples.
// ============================================================================
@PART[*]:HAS[@MODULE[ModuleCommand]:HAS[#minimumCrew[0]]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@sampleCapacity = 0
	}
}

// ============================================================================
// Individual part patches. Copies the values from above.
// Stop scrolling, there's not much you can fiddle with further.
// Do Not Touch! (please?)
// ============================================================================
@PART[mk1pod*,Mark1-2Pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1Pod/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1Pod/samples$
	}
}

@PART[kv1Pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/KV1Onion/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/KV1Onion/samples$
	}
}

@PART[kv2Pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/KV2Pea/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/KV2Pea/samples$
	}
}

@PART[kv3Pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/KV3Pomegranate/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/KV3Pomegranate/samples$
	}
}

@PART[Mark1Cockpit]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1Cockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1Cockpit/samples$
	}
}

@PART[Mark2Cockpit]:NEEDS[FeatureScience]:FOR[Kerbalism]		//because that part name makes sense.
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1InlineCockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1InlineCockpit/samples$
	}
}

@PART[landerCabinSmall]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1LanderCan/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1LanderCan/samples$
	}
}

@PART[mk1-3pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1-3Pod/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1-3Pod/samples$
	}
}

@PART[mk2Cockpit_Standard]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2Cockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2Cockpit/samples$
	}
}

@PART[mk2Cockpit_Inline]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2InlineCockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2InlineCockpit/samples$
	}
}

@PART[Mk2Pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2Pod/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2Pod/samples$
	}
}

@PART[mk2DroneCore]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2DroneCore/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2DroneCore/samples$
	}
}

@PART[mk2LanderCabin*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2LanderCan/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2LanderCan/samples$
	}
}

@PART[mk3Cockpit_Shuttle]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK3Cockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK3Cockpit/samples$
	}
}

@PART[MEMLander]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MEM/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MEM/samples$
	}
}

@PART[cupola]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/PPD12Cupola/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/PPD12Cupola/samples$
	}
}

@PART[probeCoreHex]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/HECS/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/HECS/samples$
	}
}

@PART[probeCoreHex_v2]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/HECS2/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/HECS2/samples$
	}
}

@PART[probeCoreOcto*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/OKTO/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/OKTO/samples$
	}
}

@PART[probeCoreOcto2*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/OKTO2/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/OKTO2/samples$
	}
}

@PART[probeCoreCube]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/QBE/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/QBE/samples$
	}
}

@PART[roverBody*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RoveMate/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RoveMate/samples$
	}
}

@PART[probeCoreSphere*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/Stayputnik/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/Stayputnik/samples$
	}
}

@PART[probeStackSmall]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RC-001S/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RC-001S/samples$
	}
}

@PART[probeStackLarge]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RC-L01/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RC-L01/samples$
	}
}

@PART[*]:HAS[@MODULE[Laboratory]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%title = Laboratory Storage
		%dataCapacity = #$@KERBALISM_HDD_SIZES/ScienceLabs/data$
		%sampleCapacity = #$@KERBALISM_HDD_SIZES/ScienceLabs/samples$
	}
}
	
@PART[kerbalEVA*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%title = EVA Storage
		%dataCapacity = #$@KERBALISM_HDD_SIZES/EVAKerbals/data$
		%sampleCapacity = #$@KERBALISM_HDD_SIZES/EVAKerbals/samples$
	}
}

@PART[ScienceBox]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%title = Sample Container Storage
		%dataCapacity = #$@KERBALISM_HDD_SIZES/ScienceBox/data$
		%sampleCapacity = #$@KERBALISM_HDD_SIZES/ScienceBox/samples$
	}
}
// ============================================================================
//HDD capacity/sample storage Upgrades.
// ============================================================================

PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade1
  partIcon = ScienceBox
  techRequired = engineering101
  entryCost = 840
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Engineers figured that if they add another platter to the drive, they can double the capacity!
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade2
  partIcon = ScienceBox
  techRequired = electrics
  entryCost = 6800
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = An increase in platter density equals an increase in capacity!
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade3
  partIcon = ScienceBox
  techRequired = electronics
  entryCost = 18200
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Converts all the old dusty Hard Drives to all new and shiny Solid State Drives!
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade4
  partIcon = ScienceBox
  techRequired = experimentalElectrics
  entryCost = 56400
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Quantum physics shenenigans! It just works. Don't ask how.
}
// Applies upgrades to relevant parts (i'm aware 0*anything is still 0. let me be) - avoiding unnecessary upgrade spam on parts for no reason.
@PART[*]:HAS[@MODULE[HardDrive]:HAS[#dataCapacity[>0]]]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	@MODULE[HardDrive]
	{
		UPGRADES
		{
			UPGRADE
			{
				name__ = HDD-Upgrade1
				techRequired__ = engineering101
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= 2 										// double the data capacity
			}
			UPGRADE
			{
				name__ = HDD-Upgrade2
				techRequired__ = electrics
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= 8 									//factor of 4 over the previous upgrade
			}
			UPGRADE
			{
				name__ = HDD-Upgrade3
				techRequired__ = electronics
				title = Solid State Drive
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= 64 									//factor of 8 over the previous upgrade
			}
			UPGRADE
			{
				name__ = HDD-Upgrade4
				techRequired__ = experimentalElectrics
				title = Quantum Data Drive
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= 512 									//factor of 8 over the previous upgrade.
			}
		}
	}
}

// ============================================================================
//Sample Capacity upgrades.
// ============================================================================
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = SampleCapacity-Upgrade1
  partIcon = ScienceBox
  techRequired = basicScience
  entryCost = 12500
  title = Sample Storage Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = SampleCapacity-Upgrade2
  partIcon = ScienceBox
  techRequired = fieldScience
  entryCost = 25000
  title = Sample Storage Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage
}

//applying upgrades to sample storage, avoiding probes. 
@PART[*]:HAS[@MODULE[HardDrive]:HAS[#sampleCapacity[>0]]]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%UPGRADES
		{
			UPGRADE
			{
				name__ = SampleCapacity-Upgrade1
				techRequired__ = basicScience
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= 2 										// double the sample capacity
			}
			UPGRADE
			{
				name__ = SampleCapacity-Upgrade2
				techRequired__ = fieldScience
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= 7 										//factor of 3.5 over the previous upgrade.
			}
		}
	}
}

// ============================================================================
//Internal(Private) Drive upgrades
// ============================================================================
// Goo
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = Goo-Storage-Upgrade
  partIcon = GooExperiment
  techRequired = basicScience
  entryCost = 1600
  title =  Mystery Goo Sample Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage for the Goo Experiment
}

@PART[GooExperiment]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = mysteryGoo
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/samples$
		
		UPGRADES
		{
			UPGRADE
			{
				name__ = Goo-Storage-Upgrade
				techRequired__ = basicScience
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= 5 										//allows the goo container to store 5 samples without any hard drives on vessel.
			}
		}
	}
}

// Material Bay
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = MatBay-Storage-Upgrade
  partIcon = science_module
  techRequired = precisionEngineering
  entryCost = 6800
  title = Materials Bay Sample Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage for the Materials Bay
}

@PART[science_module]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = mobileMaterialsLab
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MaterialsBay/samples$
		
		UPGRADES
		{
			UPGRADE
			{
				name__ = MatBay-Storage-Upgrade
				techRequired__ = precisionEngineering
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= 3 										//allows the MatBay to store 3 samples without any hard drives on vessel.
			}
		}
	}
}

// Spectro-Variometer
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = SpectroVariometer-Storage-Upgrade
  partIcon = sensorAtmosphere
  techRequired = advScienceTech
  entryCost = 22250
  title = Spectro Variometer Sample Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage for the Goo Experiment
}

@PART[sensorAtmosphere]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = atmosphereAnalysis
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/SpectroVariometer/samples$
		
		UPGRADES
		{
			UPGRADE
			{
				name__ = SpectroVariometer-Storage-Upgrade
				techRequired__ = advScienceTech
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= 2 										//allows the SpectroVariometer to store 2 samples without any hard drives on vessel.
			}
		}
	}
}

// Drills (surface samples) - Snowflakes. No upgrades as they're very late in the tree. Configured as is.

@PART[MiniDrill]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = atmosphereAnalysis
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/Drills/samples$
		
		UPGRADES
		{
			UPGRADE
			{
				name__ = SpectroVariometer-Storage-Upgrade
				techRequired__ = advScienceTech
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= 2 										//allows the SpectroVariometer to store 2 samples without any hard drives on vessel.
			}
		}
	}
}