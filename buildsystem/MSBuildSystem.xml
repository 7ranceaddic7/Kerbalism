<?xml version="1.0" encoding="utf-8"?>

<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- /////////////////////////////////////////////////// -->
  <!-- ///////// GLOBAL BUILD SYSTEM PROPERTIES ////////// -->
  <!-- /////////////////////////////////////////////////// -->
  
  <PropertyGroup>
    <!-- This is used to write the version file -->
    <KerbalismDownloadLink>https://github.com/Kerbalism/Kerbalism/releases</KerbalismDownloadLink>
    <KerbalismChangelogLink>https://github.com/Kerbalism/Kerbalism/blob/master/CHANGELOG.md</KerbalismChangelogLink>
	  <!-- Global config for all projects -->
	  <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
	  <PlatformTarget>x64</PlatformTarget>
    <!-- Base path -->
    <RepoBasePath>..\..</RepoBasePath>
	  <!-- Build paths -->
    <OutputPath Condition="$(Configuration)==Debug" >$(RepoBasePath)\buildsystem\BinariesDebug</OutputPath>
    <OutputPath Condition="$(Configuration)==Release" >$(RepoBasePath)\buildsystem\BinariesRelease</OutputPath>
    <IntermediateOutputPath>$(OutputPath)\obj</IntermediateOutputPath>
    <!-- Deployment path -->
    <DeploymentOutputPath>$(RepoBasePath)\buildsystem\DeploymentOutput\</DeploymentOutputPath>
    <!-- Repo Gamedata paths -->
    <GameDataKerbalismPath>$(RepoBasePath)\GameData\Kerbalism</GameDataKerbalismPath>
    <GameDataKerbalismConfigPath>$(RepoBasePath)\GameData\KerbalismConfig</GameDataKerbalismConfigPath>
    <!-- Repo projects paths -->
    <KerbalismProjectPath>$(RepoBasePath)\src\Kerbalism</KerbalismProjectPath>
    <KerbalismBootstrapProjectPath>$(RepoBasePath)\src\KerbalismBootstrap</KerbalismBootstrapProjectPath>
    <!-- other paths -->
    <UtilityPath>$(RepoBasePath)\buildsystem\Utility</UtilityPath>
    <KSPReferenceZipsPath>$(RepoBasePath)\buildsystem\References\KSPReferenceZips</KSPReferenceZipsPath>
    <KSPReferenceDllsPath>$(RepoBasePath)\buildsystem\References\KSPReferenceDlls</KSPReferenceDllsPath>
  </PropertyGroup>

  <!-- /////////////////////////////////////////////////// -->
  <!-- /////// RELEASE CONFIGURATION BUILD SCRIPT //////// -->
  <!-- /////////////////////////////////////////////////// -->


  <Target Name="BuildRelease" Condition="Exists('..\..\GameData\Kerbalism\VersionConfig.xml')">

    <Message Text="[KERBALISM-BUILD-RELEASE] Initiating RELEASE build..." Importance="high" />
    <RemoveDir Directories="$(OutputPath)\" />

    <!-- Keeping versions in sync -->
    <MSBuild
      Projects="KerbalismBuild.csproj"
      Targets="UpdateAssembliesVersion"/>
    
    <Message Text="[KERBALISM-BUILD-RELEASE] Building KerbalismBootstrap..." Importance="high" />
    <!-- KerbalismBootstrap need to be built first, it's a dependency of Kerbalism -->
    <MSBuild
      Projects="../KerbalismBootstrap/KerbalismBootstrap.csproj"
      Properties="Configuration=Release"/>

    <!-- calling a build for each KBinVersionConstant item in GameData\Kerbalism\VersionConfig.xml -->
    <Message Text="[KERBALISM-BUILD-RELEASE] Building all kbins..." Importance="high" />
    <MSBuild
      Projects="KerbalismBuild.csproj"
      Properties="KBinVersionConstant=%(KBinVersionConstant.Identity);KSPBuildVersion=%(KBinVersionConstant.KSPBuildVersion);BuildReleaseWithDevBuildConstant=$(BuildReleaseWithDevBuildConstant)"
      Targets="KBinGenerator"/>

    <Message Text="[KERBALISM-BUILD-RELEASE] Cleaning output folder..." Importance="high" />
    <RemoveDir Directories="$(IntermediateOutputPath)\" />

    <Message Text="[KERBALISM-BUILD-RELEASE] Kerbalism RELEASE build generated in $(OutputPath)" Importance="high" />

  </Target>

  <!-- This is the actual release build process for each kbin-->
  <Target Name="KBinGenerator">

    <PropertyGroup>
      <KBinOutputPath>$(OutputPath)\$(KBinVersionConstant)</KBinOutputPath>
      <KBinConstant>KSP$(KBinVersionConstant)</KBinConstant>
      <KBinFileName>Kerbalism$(KBinVersionConstant).kbin</KBinFileName>
    </PropertyGroup>

    <Message Text="[KERBALISM-BUILD-RELEASE] Generating '$(KBinFileName)' using KSP $(KSPBuildVersion) dlls..." Importance="high" />
    <!-- KerbalismBootstrap is a reference for Kerbalism, we need it in the output folder -->
    <Copy SourceFiles="$(OutputPath)\KerbalismBootstrap.dll" DestinationFolder="$(KBinOutputPath)" />
    <Copy SourceFiles="$(OutputPath)\KerbalismBootstrap.dll" DestinationFolder="$(KBinOutputPath)\obj" />

    <!-- The ExtractKSPDlls target is defined in MSBuildSystem.xml, it will extract the KSP dlls from their archive for the specified version -->
    <!-- We use the MSBuild task to call the target because we need to pass the version argument. the "Projects" used doesn't matter -->
    <Message Text="[KERBALISM-BUILD-RELEASE] Extracting KSP $(KSPBuildVersion) dlls..." Importance="high" />
    <MSBuild
      Projects="KerbalismBuild.csproj"
      Properties="KSPVersion=$(KSPBuildVersion)"
      Targets="ExtractKSPDlls"/>

    <PropertyGroup>
      <ReleaseDefineConstants>$(KBinConstant)</ReleaseDefineConstants>
      <ReleaseDefineConstants Condition=" '$(BuildReleaseWithDevBuildConstant)' == 'true' ">$(KBinConstant);DEVBUILD</ReleaseDefineConstants>
      
    </PropertyGroup>

    <!-- Now call MSBuild to actually build the Kerbalism project, in a sub-folder named after the passed version constant-->
    <Message Text="[KERBALISM-BUILD-RELEASE] Building kerbalism project with the '$(ReleaseDefineConstants)' constant..." Importance="high" />
    <MSBuild
      Projects="../Kerbalism/Kerbalism.csproj"
      Properties="Configuration=Release;DefineConstants=$(ReleaseDefineConstants);OutputPath=$(KBinOutputPath)"
      />
    <!-- Move and rename the Kerbalism.dll to the base output folder -->
    <Move SourceFiles="$(KBinOutputPath)\Kerbalism.dll" DestinationFiles="$(OutputPath)\$(KBinFileName)" />
    <Message Text="[KERBALISM-BUILD-RELEASE] Cleaning temporary files..." Importance="high" />

    <!-- Delete the sub-folder named after the passed version constant -->
    <RemoveDir Directories="$(KBinOutputPath)" />

    <Message Text="[KERBALISM-BUILD-RELEASE] '$(KBinFileName)' generated." Importance="high" />
  </Target>

  <!-- ///////////////////////////////////////////////////// -->
  <!-- //////// DEBUG CONFIGURATION BUILD SCRIPT /////////// -->
  <!-- ///////////////////////////////////////////////////// -->

  <Target Name="BuildDebug" Condition="Exists('..\..\buildsystem\DevEnvConfig.xml')">

    <Message Text="[KERBALISM-BUILD-DEBUG] Building for KSP version tag : $(KSPDevVersion)" Importance="high" />
    <Message Text="[KERBALISM-BUILD-DEBUG] Cleaning build output folder..." Importance="high" />
    <RemoveDir Directories="$(OutputPath)" />

    <Message Text="[KERBALISM-BUILD-DEBUG] Building KerbalismBootstrap..." Importance="high" />
    <!-- KerbalismBootstrap need to be built first, it's a dependency of Kerbalism -->
    <MSBuild
      Projects="../KerbalismBootstrap/KerbalismBootstrap.csproj"
      Properties="Configuration=Debug"/>

    <Message Text="[KERBALISM-BUILD-DEBUG] Building using constants '$(DefineConstants)'" Importance="high" />
    <MSBuild
      Projects="../Kerbalism/Kerbalism.csproj"
      Properties="Configuration=Debug;DefineConstants=$(DefineConstants);OutputPath=$(OutputPath)"
      />
    <Message Text="[KERBALISM-BUILD-DEBUG] Build completed, output folder : $(OutputPath)" Importance="high" />

    <!-- Get absolute path for the output dir -->
    <ConvertToAbsolutePath Paths="$(OutputPath)">
      <Output TaskParameter="AbsolutePaths" PropertyName="OutputPathAbs" />
    </ConvertToAbsolutePath>
    <PropertyGroup>
      <KerbalismDll>$(OutputPath)\Kerbalism.dll</KerbalismDll>
      <KerbalismMDB>$(OutputPath)\Kerbalism.dll.mdb</KerbalismMDB>
      <KerbalismBootstrapDll>$(OutputPath)\KerbalismBootstrap.dll</KerbalismBootstrapDll>
      <KerbalismBootstrapMDB>$(OutputPath)\KerbalismBootstrap.dll.mdb</KerbalismBootstrapMDB>
    </PropertyGroup>
    <!-- On windows, generate the mono debug symbols (*.mdb files) -->
    <!-- 
    Note : there is currently (08/2019) no solution to generate them on linux/osx. 
    - Only "full" PDB files can be converted into MDB files.
    - Mono 5+ can't generate "full" PDB files (it automatically change <DebugType>full</DebugType> to <DebugType>portable</DebugType>)
    - The version of MSBuild (15.1) and of the compiler used by Mono 4.8 (last version able to generate MDB files) are just too old (no C# 7 support + too much breaking code)
    -->
    <Message Condition="'$(OS)' == 'Windows_NT'" Text="[KERBALISM-BUILD-DEBUG] Windows build : generating mono debug mdb files..." Importance="high" />
    <Exec Condition="'$(OS)' == 'Windows_NT'" Command="$(UtilityPath)\win_pdb2mdb\pdb2mdb.exe $(OutputPathAbs)\Kerbalism.dll" />
    <Exec Condition="'$(OS)' == 'Windows_NT'" Command="$(UtilityPath)\win_pdb2mdb\pdb2mdb.exe $(OutputPathAbs)\KerbalismBootstrap.dll" />

    <!-- If requested in DevEnvConfig.xml, copy gamedata -->
    <ItemGroup>
      <GameDataContent Include="$(RepoBasePath)\GameData\**\*.*" />
    </ItemGroup>
    <Message Condition="'$(CopyGameDataOnBuild)' == 'true'" Text="[KERBALISM-BUILD-DEBUG] Copying GameData to $(KSPDevPath)..." Importance="high" />
    <RemoveDir Condition="'$(CopyGameDataOnBuild)' == 'true'" Directories="$(KSPDevPath)\GameData\Kerbalism;$(KSPDevPath)\GameData\KerbalismConfig" />
    <Copy Condition="'$(CopyGameDataOnBuild)' == 'true'" SourceFiles="@(GameDataContent)" DestinationFolder="$(KSPDevPath)\GameData\%(RecursiveDir)" />
    <!-- copy dll and mdb files -->
    <Message Text="[KERBALISM-BUILD-DEBUG] Copying build dlls to $(KSPDevPath)\GameData\Kerbalism..." Importance="high" />
    <Copy Condition="'$(OS)' == 'Windows_NT'" SourceFiles="$(KerbalismMDB);$(KerbalismBootstrapMDB)" DestinationFolder="$(KSPDevPath)\GameData\Kerbalism" />
    <Copy SourceFiles="$(KerbalismDll);$(KerbalismBootstrapDll)" DestinationFolder="$(KSPDevPath)\GameData\Kerbalism" />
    <!-- done -->
    <Message Text="[KERBALISM-BUILD-DEBUG] : Kerbalism DEBUG build generated." Importance="high" />
  </Target>


  <!-- ///////////////////////////////////////////////////// -->
  <!-- /////////////// DEPLOYMENT TARGETS ////////////////// -->
  <!-- ///////////////////////////////////////////////////// -->

  <!-- //////////////// CreateDevRelease ////////////////// -->
  <!-- 
  Build a dev release (Kerbalism will be be built with the "DEVBUILD" constant) and create the zipped release in buildsystem\MakeRelease\Output
  This target is standalone and can be used from the MSBuild command line like this :
  msbuild.exe Kerbalism.sln -target:CreateDevRelease
  -->
  <Target Name="CreateDevRelease">

    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'CreateDevRelease' : Starting..." Importance="high" />

    <MSBuild
      Condition="$(Configuration)==Release"
      Projects="KerbalismBuild.csproj"
      Properties="BuildReleaseWithDevBuildConstant=true"
      Targets="BuildRelease"/>

    <RemoveDir Directories="$(DeploymentOutputPath)" />
    <MakeDir Directories="$(DeploymentOutputPath)\temp"/>

    <ItemGroup>
      <KerbalismGameData Include="$(GameDataKerbalismPath)\**\*.*" />
      <KerbalismConfigGameData Include="$(GameDataKerbalismConfigPath)\**\*.*" />
    </ItemGroup>
   
    <Copy SourceFiles="@(KerbalismGameData)" DestinationFolder="$(DeploymentOutputPath)\temp\GameData\Kerbalism\%(RecursiveDir)" />

    <ItemGroup>
      <DeployPath Include="$(DeploymentOutputPath)\temp\GameData\Kerbalism\Kerbalism.dll" />
      <DeployPath Include="$(DeploymentOutputPath)\temp\GameData\Kerbalism\KerbalismBootstrap.dll" />
      <DeployPath Include="$(DeploymentOutputPath)\temp\GameData\Kerbalism\*.kbin" />
    </ItemGroup>
    
    <Delete Files="@(DeployPath)" />

    <ItemGroup>
      <GeneratedBinaries Include="$(OutputPath)\*.dll" />
      <GeneratedBinaries Include="$(OutputPath)\*.kbin" />
    </ItemGroup>

    <Copy SourceFiles="@(GeneratedBinaries)" DestinationFolder="$(DeploymentOutputPath)\temp\GameData\Kerbalism" />

    <ZipDirectory SourceDirectory="$(DeploymentOutputPath)\temp" DestinationFile="$(DeploymentOutputPath)\Kerbalism.zip" />

    <RemoveDir Directories="$(DeploymentOutputPath)\temp" />
    <MakeDir Directories="$(DeploymentOutputPath)\temp"/>

    <Copy SourceFiles="@(KerbalismConfigGameData)" DestinationFolder="$(DeploymentOutputPath)\temp\GameData\KerbalismConfig\%(RecursiveDir)" />
    <ZipDirectory SourceDirectory="$(DeploymentOutputPath)\temp" DestinationFile="$(DeploymentOutputPath)\KerbalismConfig.zip" />



    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'CreateDevRelease' : Done." Importance="high" />

  </Target>

  <!-- ///////////////////////////////////////////////////// -->
  <!-- //////////// PUBLISH RELEASE TARGETS //////////////// -->
  <!-- ///////////////////////////////////////////////////// -->
  
  
  <!-- https://stackoverflow.com/questions/4404172/how-to-tag-an-older-commit-in-git -->

  <!-- git rev-parse origin/master // get last commit id -->
  <!-- git tag -a nameofthetag idofthecommit // create the tag -->
  <!-- git push origin <tag_name> // push the created tag-->


  <!-- ///////////////////////////////////////////////////// -->
  <!-- /////////// STANDALONE UTILITY TARGETS ////////////// -->
  <!-- ///////////////////////////////////////////////////// -->

  <!-- //////////////// UpdateVersionFile ////////////////// -->
  <!-- 
  Update the Kerbalism.version file based on the VersionConfig.xml file
  This target is standalone and can be used from the MSBuild command line like this :
  msbuild.exe Kerbalism.sln -target:UpdateVersionFile
  -->
  <Target Name="UpdateVersionFile">

    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'UpdateVersionFile' : Starting..." Importance="high" />

    <!-- filter the KBinVersionConstant ItemGroup to find the min / max version item, and copy it in a new ItemGroup (that will have only 1 item) -->
    <FindInList CaseSensitive="false" List="@(KBinVersionConstant)" ItemSpecToFind="$(KBinMinVersion)">
      <Output TaskParameter="ItemFound" ItemName="MinKSPVersion"/>
    </FindInList>
    <FindInList CaseSensitive="false" List="@(KBinVersionConstant)" ItemSpecToFind="$(KBinMaxVersion)">
      <Output TaskParameter="ItemFound" ItemName="MaxKSPVersion"/>
    </FindInList>

    <!-- we can't iterate over multiple ItemGroups (MinKSPVersion and MaxKSPVersion) in the same property , so split the parsing -->
    <PropertyGroup>
      <VersionFileURL>"URL": "http://ksp-avc.cybutek.net/version.php?id=559"</VersionFileURL>
      <VersionFileDownloadLink>"DOWNLOAD": "$(KerbalismDownloadLink)"</VersionFileDownloadLink>
      <VersionFileChangelogLink>"CHANGE_LOG_URL": "$(KerbalismChangelogLink)"</VersionFileChangelogLink>
      <VersionFileKerbalismVersion>"VERSION": {"MAJOR": $(KerbalismVersionMajor), "MINOR": $(KerbalismVersionMinor), "PATCH": 0, "BUILD": 0}</VersionFileKerbalismVersion>
      <VersionFileKSPVersion>"KSP_VERSION": {"MAJOR": %(MaxKSPVersion.KSPMinMajor), "MINOR": %(MaxKSPVersion.KSPMinMinor), "PATCH": %(MaxKSPVersion.KSPMinBuild)}</VersionFileKSPVersion>
      <VersionFileKSPVersionMin>"KSP_VERSION_MIN": {"MAJOR": %(MinKSPVersion.KSPMinMajor), "MINOR": %(MinKSPVersion.KSPMinMinor), "PATCH": %(MinKSPVersion.KSPMinBuild)}</VersionFileKSPVersionMin>
      <VersionFileKSPVersionMax>"KSP_VERSION_MAX": {"MAJOR": %(MaxKSPVersion.KSPMaxMajor), "MINOR": %(MaxKSPVersion.KSPMaxMinor), "PATCH": %(MaxKSPVersion.KSPMaxBuild)}</VersionFileKSPVersionMax>
      <KerbalismVersionFileContent>
{
  "NAME": "Kerbalism",
  $(VersionFileURL),
  $(VersionFileDownloadLink),
  $(VersionFileChangelogLink),
  $(VersionFileKerbalismVersion),
  $(VersionFileKSPVersion),
  $(VersionFileKSPVersionMin),
  $(VersionFileKSPVersionMax)
}
      </KerbalismVersionFileContent>
    </PropertyGroup>

    <Message Text="[KERBALISM-BUILD-GLOBAL] VersionConfig.xml parsing done :" Importance="high" />
    <Message Text="$(KerbalismVersionFileContent)" Importance="high" />
    <Message Text="[KERBALISM-BUILD-GLOBAL] Creating $(GameDataKerbalismPath)/Kerbalism.version..." Importance="high" />

    <WriteLinesToFile
      File="$(GameDataKerbalismPath)\Kerbalism.version"
      Overwrite="true"
      Lines="$(KerbalismVersionFileContent)" />

    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'UpdateVersionFile' : Done." Importance="high" />
  </Target>


  <!-- //////////////// UpdateAssembliesVersion ////////////////// -->
  <!-- 
  Update the assemblyInfo.cs files in Kerbalism and KerbalismBootstrap to match the version defined in VersionConfig.xml
  This target is standalone and can be used from the MSBuild command line like this :
  msbuild.exe Kerbalism.sln -target:UpdateAssembliesVersion
  -->
  <Target Name="UpdateAssembliesVersion">

    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'UpdateAssembliesVersion' : updating version to $(KerbalismVersionMajor).$(KerbalismVersionMinor)..." Importance="high" />

    <!-- Use our inline task to update the assemblyInfo.cs files -->
    <UpdateAssemblyVersion versionMajor="$(KerbalismVersionMajor)" versionMinor="$(KerbalismVersionMinor)" projectPath="$(KerbalismProjectPath)" useAutoBuild="false" />
    <UpdateAssemblyVersion versionMajor="$(KerbalismVersionMajor)" versionMinor="$(KerbalismVersionMinor)" projectPath="$(KerbalismBootstrapProjectPath)" useAutoBuild="true" />
    
    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'UpdateAssembliesVersion' : Done." Importance="high" />

  </Target>

  <!-- This task update the version to the given Minor/Major version in the Properties\AssemblyInfo.cs for the given project path-->
  <!-- If useAutoBuild = true, the AssemblyVersion will use the "Major.Minor.*" format, making the compiler autogenerate the version build and revision-->
  <!-- After being build, the build (3rd) number is the number of days since the year 2000, and the revision (4th) number is the number of seconds since midnight (divided by 2)-->
  <!-- We use this autogenerated build number in KerbalismBootstrap to generate our "dev branch" release version -->
  <UsingTask TaskName="UpdateAssemblyVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <versionMajor ParameterType="System.String" Required="true" />
      <versionMinor ParameterType="System.String" Required="true" />
      <projectPath ParameterType="System.String" Required="true" />
      <useAutoBuild ParameterType="System.Boolean" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Text"/>
      <Using Namespace="System.Text.RegularExpressions"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            string assemblyInfoPath = Path.Combine(projectPath, "Properties", "AssemblyInfo.cs").ToString();
            string[] assemblyInfo = File.ReadAllLines(assemblyInfoPath);

            for (int i = 0; i < assemblyInfo.Length; i++)
            {
                if (Regex.IsMatch(assemblyInfo[i], @"^\[ *assembly *: *AssemblyVersion.*?\]"))
                {
                    assemblyInfo[i] = "[assembly: AssemblyVersion(\"" + versionMajor + "." + versionMinor;
                    if (useAutoBuild) assemblyInfo[i] += ".*";
                    assemblyInfo[i] += "\")]";
                }

                if (Regex.IsMatch(assemblyInfo[i], @"^\[ *assembly *: *AssemblyFileVersion.*?\]"))
                    assemblyInfo[i] = "[assembly: AssemblyFileVersion(\"" + versionMajor + "." + versionMinor + "\")]";
            }

            File.WriteAllLines(assemblyInfoPath, assemblyInfo, Encoding.UTF8);
         ]]>
      </Code>
    </Task>
  </UsingTask>




  <!-- ///////////////////////////////////////////////////// -->
  <!-- //////////////// LIBRARY TARGETS //////////////////// -->
  <!-- ///////////////////////////////////////////////////// -->


  <!--
  Extract the KSP dll from the zips stored in BuildRelease\KSPReferenceZips
  A $(KSPVersion) property formated "X.X.X" must be given
  Call this with the following task to extract the KSP zips :

      <MSBuild
        Projects="myproject.csproj"
        Properties="KSPVersion=1.7.3"
        Targets="ExtractKSPDlls"/>
  -->
  <Target Name="ExtractKSPDlls">

    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'ExtractKSPDlls' : Starting with parameter 'KSPVersion=$(KSPVersion)'..." Importance="high" />
    <ConvertToAbsolutePath Paths="$(KSPReferenceZipsPath)\KSP-$(KSPVersion).7z">
      <Output TaskParameter="AbsolutePaths" PropertyName="ZipAbsolutePath" />
    </ConvertToAbsolutePath>
    <ConvertToAbsolutePath Paths="$(UtilityPath)\win_7za\7za.exe">
      <Output TaskParameter="AbsolutePaths" PropertyName="ZaWinAbsolutePath" />
    </ConvertToAbsolutePath>
    <ConvertToAbsolutePath Paths="$(KSPReferenceDllsPath)">
      <Output TaskParameter="AbsolutePaths" PropertyName="DllsAbsolutePath" />
    </ConvertToAbsolutePath>

    <Message Text="[KERBALISM-BUILD-GLOBAL] Unzipping KSP $(KSPZip) dlls from $(ZipAbsolutePath) " Importance="high" />
    <Message Text="[KERBALISM-BUILD-GLOBAL] to $(DllsAbsolutePath)" Importance="high" />

    <RemoveDir Directories="$(OutputAbsolutePath)" />
<!-- <Exec Condition="'$(OS)' == 'Windows_NT'" Command="$(ZaWinAbsolutePath) x $(ZipAbsolutePath) -y -bso0 -bsp0 -o$(DllsAbsolutePath) -pgQn337XZBEFxzFuVwzKgc27ehZo7XLz485hh3erqF9 > nul" /> -->
    <Exec Condition="'$(OS)' == 'Windows_NT'" Command="$(ZaWinAbsolutePath) x $(ZipAbsolutePath) -y -bso0 -bsp0 -o$(DllsAbsolutePath) -pgQn337XZBEFxzFuVwzKgc27ehZo7XLz485hh3erqF9 > nul" />
    <Exec Condition="'$(OS)' != 'Windows_NT'" Command="7za x $(ZipAbsolutePath) -y -bso0 -bsp0 -o$(DllsAbsolutePath) -pgQn337XZBEFxzFuVwzKgc27ehZo7XLz485hh3erqF9" />
    <Message Text="[KERBALISM-BUILD-GLOBAL] Task 'ExtractKSPDlls' : Done." Importance="high" />

  </Target>
  
</Project>